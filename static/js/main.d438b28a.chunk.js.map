{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css","Components/Feedback/Feedback.module.css","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","Components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","buttonList","map","name","index","button","type","onClick","Section","title","children","wrapper","mainTitle","Statistics","good","neutral","bad","totalFeedback","positivePercentage","positive","Notification","message","Feedback","state","handleClick","e","value","target","textContent","setState","prevState","countTotalFeedback","Object","values","reduce","acc","currentValue","countPositiveFeedbackPercentage","Percentage","Math","round","key","keys","this","container","Number","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,wBAAwB,SAAW,+B,kBCAvKD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,WAAa,sC,gBCAxED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,6B,oBCAjED,EAAOC,QAAU,CAAC,MAAQ,8B,gBCA1BD,EAAOC,QAAU,CAAC,UAAY,8B,6LCkBfC,MAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,oBAAIC,UAAWC,IAAEC,WAAjB,SACGJ,EAAQK,KAAI,SAACC,EAAMC,GAAP,OACX,6BACE,wBAAQL,UAAWC,IAAEK,OAAQC,KAAK,SAASC,QAAST,EAApD,SACGK,KAFIC,S,gBCQFI,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASX,UAAWC,IAAEW,QAAtB,UACE,oBAAIZ,UAAWC,IAAEY,UAAjB,SAA6BH,IAC5BC,M,gBCyBQG,MA7Bf,YAAgF,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,mBACvD,OACE,oCACE,oBAAGnB,UAAWC,IAAEH,QAAU,IAAMG,IAAEc,KAAlC,mBACQ,+BAAOA,OAEf,oBAAGf,UAAWC,IAAEH,QAAU,IAAMG,IAAEe,QAAlC,sBACW,+BAAOA,OAElB,oBAAGhB,UAAWC,IAAEH,QAAU,IAAMG,IAAEgB,IAAlC,kBACO,+BAAOA,OAEd,oBAAGjB,UAAWC,IAAEH,QAAhB,oBACS,+BAAOoB,OAEhB,oBAAGlB,UAAWC,IAAEH,QAAU,IAAMG,IAAEmB,SAAlC,+BAEE,iCAAOD,EAAP,c,iBCXOE,MANf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGtB,UAAWC,IAAES,MAAhB,SAAwBY,K,iBC6DlBC,E,4MAxDbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAc,SAACC,GACb,IAAMC,EAAQD,EAAEE,OAAOC,YACvB,EAAKC,UAAS,SAACC,GAAD,sBAAmBJ,EAAQI,EAAUJ,GAAS,O,EAG9DK,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKV,OAAOW,QAC/B,SAACC,EAAKC,GAAN,OAAuBD,EAAMC,IAC7B,I,EAIJC,gCAAkC,WAChC,IACMC,EADMN,OAAOC,OAAO,EAAKV,OACRrB,KAAI,SAACwB,GAC1B,OAAgB,IAARA,EAAe,EAAKK,wBAE9B,OAAOQ,KAAKC,MAAMF,EAAW,K,4CAG/B,WACE,IAAMG,EAAMT,OAAOU,KAAKC,KAAKpB,OAC7B,EAA+BoB,KAAKpB,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKjB,UAAWC,IAAE4C,UAAlB,UACE,cAAC,EAAD,CAASnC,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBX,gBAAiB6C,KAAKnB,YAAa3B,QAAS4C,MAE/D,cAAC,EAAD,CAAShC,MAAM,aAAf,SACiC,IAA9BkC,KAAKZ,qBACJ,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,cAAe0B,KAAKZ,qBACpBb,mBACE2B,OAAOF,KAAKN,mCACRM,KAAKN,kCACL,a,GA/CGS,aCIRC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d438b28a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Statistics_options__1EB7E\",\"good\":\"Statistics_good__uPTkR\",\"neutral\":\"Statistics_neutral__2rHn7\",\"bad\":\"Statistics_bad__3rauT\",\"positive\":\"Statistics_positive__3sJHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__32oPC\",\"buttonList\":\"FeedbackOptions_buttonList__1Sbj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__1fvnj\",\"mainTitle\":\"Section_mainTitle__3B8I9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__13Tli\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__1aCHD\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <ul className={s.buttonList}>\r\n      {options.map((name, index) => (\r\n        <li key={index}>\r\n          <button className={s.button} type=\"button\" onClick={onLeaveFeedback}>\r\n            {name}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.wrapper}>\r\n      <h2 className={s.mainTitle}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\nfunction Statistics({ good, neutral, bad, totalFeedback, positivePercentage }) {\r\n  return (\r\n    <section>\r\n      <p className={s.options + \" \" + s.good}>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p className={s.options + \" \" + s.neutral}>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p className={s.options + \" \" + s.bad}>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p className={s.options}>\r\n        Total: <span>{totalFeedback}</span>\r\n      </p>\r\n      <p className={s.options + \" \" + s.positive}>\r\n        Positive feedback:\r\n        <span>{positivePercentage}%</span>\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  totalFeedback: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\nfunction Notification({ message }) {\r\n  return <p className={s.title}>{message}</p>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import { Component } from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"../Section/Section\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport s from \"./Feedback.module.css\";\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    const value = e.target.textContent;\r\n    this.setState((prevState) => ({ [value]: prevState[value] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce(\r\n      (acc, currentValue) => acc + currentValue,\r\n      0\r\n    );\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const arr = Object.values(this.state);\r\n    const Percentage = arr.map((value) => {\r\n      return (value * 100) / this.countTotalFeedback();\r\n    });\r\n    return Math.round(Percentage[0]);\r\n  };\r\n\r\n  render() {\r\n    const key = Object.keys(this.state);\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <div className={s.container}>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions onLeaveFeedback={this.handleClick} options={key} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              totalFeedback={this.countTotalFeedback()}\r\n              positivePercentage={\r\n                Number(this.countPositiveFeedbackPercentage())\r\n                  ? this.countPositiveFeedbackPercentage()\r\n                  : 0\r\n              }\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import \"./App.css\";\nimport Feedback from \"./Components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}